(()=>{var e={d:(o,r)=>{for(var t in r)e.o(r,t)&&!e.o(o,t)&&Object.defineProperty(o,t,{enumerable:!0,get:r[t]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},o={};(()=>{"use strict";e.r(o),e.d(o,{onNameLookup:()=>n});const r={FNS:"Freename",ENS:"Ethereum Name Service",UD:"Unstoppable Domains",BNS:"Base Name Service",ID:"SpaceID",DNAME:"DecentraName"},t={"eip155:1":"ethereum","eip155:137":"polygon","eip155:8453":"base","eip155:56":"bsc","eip155:1329":"sei","eip155:42793":"etherlink"},n=async e=>{const{chainId:o,domain:n}=e,a=Object.keys(t),i=Object.keys(r);if(!n||!a.includes(o))return null;for(const e of i)try{var l,s;const a=await fetch(`https://apis.freename.io/api/v1/resolver/${e}/${n}`);if(!a.ok)continue;const i=await a.json(),p=null===(s=i)||void 0===s||null===(l=s.data)||void 0===l?void 0:l.resolvedAddress;if(p){var d,c,u;const a=null===(u=i)||void 0===u||null===(c=u.data)||void 0===c||null===(d=c.network)||void 0===d?void 0:d.toLowerCase(),l=`${r[e]} (${a})`;return{resolvedAddresses:[{resolvedAddress:p,protocol:t[o]!==a?`⚠️ ${l}`:l,domainName:n}]}}}catch(e){return null}return null}})(),module.exports=o})();